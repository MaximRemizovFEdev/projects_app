import { useState } from "react";
import { List } from "./components/List/List";
import { Paragraph } from "./components/Paragraph/Paragraph";
import "./style.css";

// Всю это форму сделать заполняемой (режим редактирования). Режим чтения (уже есть)
// далее сделать это микрофронтом
// Далее сделать это SSR на Nextjs
export const CVForm = () => {
  const [isEditAll, setIsEditAll] = useState(false);
  const aboutText = `
        Я разработчик фронтенд. 
        Стек react, typescript, redux. 
        Коммерческй опыт 4+ года. Имеется высшее образование.

        *В Sarex я оптимизировал Webpack-конфиг, что сократило время сборки на 30%. 
        Это позволило команде быстрее тестировать изменения и чаще выпускать обновления. 
            
        *В GreenData я создал Chrome-расширение, которое автоматизировало проксирование запросов. 
            
        *В EPAM я участвовал в обучении 30+ джунов и провел 50+ собеседований. 
        Это помогло компании быстрее закрывать вакансии и снизить затраты на поиск специалистов.
    `;
  const mainTasks = `
        Разработка и поддержка веб-приложений на React. 
        Оптимизация производительности (Webpack, react-virtualized), 
        код-ревью, менторство, работа в Agile/Scrum, 
        адаптивная верстка, Unit-тестирование, 
        опыт верстки и отправки email писем
    `;
  const microfront = `
    В Sarex работал с микрофронтендом (wmf) - например, модуль "Заметки". Задача: добавить функционал по удалению заметки (api удаления, дизейбл кнопки, увед об результате). Другой пример: рефактор состояния заметок - часть состояния была внутри микрофронта, часть передавалась. Надо было привести к еднообразию.
    `;
  const hardTask = `
    Добавление экспорта tiff с поворотом. Проблема в алгортме, и на фронте, и на бэке. Диагональ(заменли на 4 точки), для расчетов радины. Алгоритм от середны развертки считал коорды, а photo-shpere от левого края, BE получал поворот карты и поворотные точки, и еще раз поворачивал
    `;
  return (
    <div>
      <hr />
      <Paragraph
        title="Коротко о себе"
        paragraphText={aboutText}
        isEdit={isEditAll}
      />
      <hr />
      <List
        title="О командах"
        data={[
          "Sarex: 2 FE, 2 BE, 1 PM, 1 QA, 1 DES",
          "Greendata: 2 FE, 3 BE, 1 QA, 1 BA, 1 DES",
          "Epam: 2 FE, 3 BE, 3 QA, 3 BA, 1 PM, 1 DES",
        ]}
        isEdit={isEditAll}
      />
      <hr />
      <Paragraph
        title="Основные задачи"
        paragraphText={mainTasks}
        isEdit={isEditAll}
      />
      <hr />
      <Paragraph
        title="Микрофронтенд"
        paragraphText={microfront}
        isEdit={isEditAll}
      />
      <hr />
      <List
        title="CSS"
        data={[
          "scss использовался в одном из микрофронтов проекта Sarex",
          "css-in-js (из mui) на последнем проекте использовался - Sarex",
          "less использовался в проекте Greendata",
          "styled-components в проекте Epam",
        ]}
        isEdit={isEditAll}
      />
      <hr />
      <Paragraph
        title="Самая трудная задача"
        paragraphText={hardTask}
        isEdit={isEditAll}
      />
      <hr />
      <Paragraph
        title="Тесты"
        paragraphText={"Про jest, про интеграционные тесты, про настройку CI"}
        isEdit={isEditAll}
      />
      <hr />
      <List
        title="Вопросы работодателю"
        data={[
          `О команде и структуре: "Как устроена структура команды, в которой я
          буду работать? Кто мои непосредственные руководители и коллеги?`,
          `О возможностях обучения и развития: "Предусмотрены ли в компании
          возможности для обучения и профессионального развития сотрудников?
          Есть ли ментор закрепленный?"`,
          `О перспективах роста: "Какие возможности для карьерного роста и
          повышения в компании существуют?"`,
        ]}
        isEdit={isEditAll}
      />
      <hr />
    </div>
  );
};
