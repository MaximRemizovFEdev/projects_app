import "./style.css";

// Всю это форму сделать заполняемой (режим редактирования). Режим чтения (уже есть)
// далее сделать это микрофронтом
// Далее сделать это SSR на Nextjs
export const CVForm = () => {
    const aboutText = `
            Я разработчик фронтенд. 
            Стек react, typescript, redux. 
            Коммерческй опыт 4+ года. Имеется высшее образование.

            *В Sarex я оптимизировал Webpack-конфиг, что сократило время сборки на 30%. 
            Это позволило команде быстрее тестировать изменения и чаще выпускать обновления. 
            
            *В GreenData я создал Chrome-расширение, которое автоматизировало проксирование запросов. 
            
            *В EPAM я участвовал в обучении 30+ джунов и провел 50+ собеседований. 
            Это помогло компании быстрее закрывать вакансии и снизить затраты на поиск специалистов.
    `;
    const mainTasks = `
        Разработка и поддержка веб-приложений на React. 
        Оптимизация производительности (Webpack, react-virtualized), 
        код-ревью, менторство, работа в Agile/Scrum, 
        адаптивная верстка, Unit-тестирование, 
        опыт верстки и отправки email писем
    `;
    return (
        <div>
            <hr/>
            <h3>Коротко о себе</h3>
            <pre>{aboutText}</pre>
            <hr/>
            <h3>О командах</h3>
            <p className="text-width"><b>Sarex:</b> 2 FE, 2 BE, 1 PM, 1 QA, 1 DES</p>
            <p className="text-width"><b>Greendata:</b> 2 FE, 3 BE, 1 QA, 1 BA, 1 DES</p>
            <p className="text-width"><b>Epam:</b> 2 FE, 3 BE, 3 QA, 3 BA, 1 PM, 1 DES</p>
            <hr/>
            <h3>Основные задачи</h3>
            <pre>{mainTasks}</pre>
            <hr/>
            <h3>Микрофронтенд</h3>
            <p className="text-width">В Sarex работал с микрофронтендом (wmf) - например, модуль "Заметки". Задача: добавить функционал по удалению заметки (api удаления, дизейбл кнопки, увед об результате). Другой пример: рефактор состояния заметок - часть состояния была внутри микрофронта, часть передавалась. Надо было привести к еднообразию.</p>
            <hr/>
            <h3>CSS</h3>
            <ul className="text-width">
                <li>scss использовался в одном из микрофронтов проекта Sarex</li>
                <li>css-in-js (из mui) на последнем проекте использовался - Sarex</li>
                <li>less использовался в проекте Greendata</li>
                <li>styled-components в проекте Epam</li>
            </ul>
            <hr/>
            <h3>Самая трудная задача</h3>
            <p className="text-width">Добавление экспорта tiff с поворотом. Проблема в алгортме, и на фронте, и на бэке. Диагональ(заменли на 4 точки), для расчетов радины. Алгоритм от середны развертки считал коорды, а photo-shpere от левого края, BE получал поворот карты и поворотные точки, и еще раз поворачивал</p>
            <hr/>
            <h3>Тесты</h3>
            <p>Про jest, про интеграционные тесты, про настройку CI</p>
            <hr/>
        </div>
    )
}